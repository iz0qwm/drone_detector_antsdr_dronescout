
baudrate=115200
bitstream_image=antsdr.bit
bitstream_size=0x400000
bootargs=console=ttyPS0,115200 root=/dev/ram0 rw earlyprintk rootfstype=ext4 rootwait
bootcmd=run $modeboot
bootdelay=0
bootenv=uEnv.txt
boot_image=BOOT.bin
boot_size=0xF00000
devicetree_image=devicetree.dtb
devicetree_load_address=0x2000000
devicetree_size=0x20000
ethaddr=00:0a:35:00:01:22
extraenv_load_address=0x207E000
fdt_high=0x20000000
fit_load_address=0x2080000
fit_size=0x900000
importbootenv=echo Importing environment from SD jcc...; env import -t ${loadbootenv_addr} $filesize;
initrd_high=0x20000000
ipaddr=192.168.1.1
jtagboot=env default -a;sf probe && sf protect unlock 0 100000 && run dfu_sf; 
kernel_image=uImage
loadbit_addr=0x100000
loadbootenv_addr=0x2000000
loadbootenv=load mmc 0 ${loadbootenv_addr} ${bootenv}
maxcpus=1
netmask=255.255.255.0
preboot=if test $modeboot = sdboot && env run sd_uEnvtxt_existence_test; then if env run loadbootenv; then env run importbootenv; fi; fi;
ramdisk_image=uramdisk.image.gz
ramdisk_load_address=0x4000000
ramdisk_size=0x4000 00
loaddfu=if mmc rescan; then gpio set 0;fatload mmc 0 0x1000 boot.dfu; sf probe; sf update 0x1000 0x0 0x100000; fatload mmc 0 ${fit_load_address} antsdre200.dfu; sf update ${fit_load_address} 0x200000 0x1E00000; fatload mmc 0 0x20000 uboot-env.dfu; sf update 0x20000 0x100000 0x20000;gpio clear 0;fi
sdboot=if env run dfu_existence_test;then env run loaddfu;fi;if mmcinfo; then echo run sdboot jcc... && fatload mmc 0 ${loadbit_addr} ${bitstream_image} && fpga loadb 0 ${loadbit_addr} ${bitstream_size}  &&load mmc 0 ${fit_load_address} ${kernel_image} && load mmc 0 ${devicetree_load_address} ${devicetree_image} && load mmc 0 ${ramdisk_load_address} ${ramdisk_image} && bootm ${fit_load_address} ${ramdisk_load_address} ${devicetree_load_address}; fi
sd_uEnvtxt_existence_test=test -e mmc 0 /uEnv.txt
dfu_existence_test=test -e mmc 0 /boot.dfu && test -e mmc 0 /uboot-env.dfu && test -e mmc 0 /antsdre200.dfu 
uenvboot=if run loadbootenv; then echo Loaded environment from ${bootenv}; run importbootenv; fi; if test -n $uenvcmd; then echo Running uenvcmd ...; run uenvcmd; fi
uenvcmd=run sdboot
usbboot=if usb start; then run uenvboot; echo Copying Linux from USB to RAM... && load usb 0 ${fit_load_address} ${kernel_image} && load usb 0 ${devicetree_load_address} ${devicetree_image} && load usb 0 ${ramdisk_load_address} ${ramdisk_image} && bootm ${fit_load_address} ${ramdisk_load_address} ${devicetree_load_address}; fi
